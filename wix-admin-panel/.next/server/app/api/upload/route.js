/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/upload/route";
exports.ids = ["app/api/upload/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/@supabase/realtime-js/dist/main sync recursive":
/*!************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/main/ sync ***!
  \************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/@supabase/realtime-js/dist/main sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2Fworkspaces%2Fcodespaces-blank%2Fwix-admin-panel%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2Fcodespaces-blank%2Fwix-admin-panel&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2Fworkspaces%2Fcodespaces-blank%2Fwix-admin-panel%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2Fcodespaces-blank%2Fwix-admin-panel&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _workspaces_codespaces_blank_wix_admin_panel_src_app_api_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/upload/route.ts */ \"(rsc)/./src/app/api/upload/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/upload/route\",\n        pathname: \"/api/upload\",\n        filename: \"route\",\n        bundlePath: \"app/api/upload/route\"\n    },\n    resolvedPagePath: \"/workspaces/codespaces-blank/wix-admin-panel/src/app/api/upload/route.ts\",\n    nextConfigOutput,\n    userland: _workspaces_codespaces_blank_wix_admin_panel_src_app_api_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZ1cGxvYWQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnVwbG9hZCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnVwbG9hZCUyRnJvdXRlLnRzJmFwcERpcj0lMkZ3b3Jrc3BhY2VzJTJGY29kZXNwYWNlcy1ibGFuayUyRndpeC1hZG1pbi1wYW5lbCUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGd29ya3NwYWNlcyUyRmNvZGVzcGFjZXMtYmxhbmslMkZ3aXgtYWRtaW4tcGFuZWwmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ3dCO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsid2VicGFjazovL3dpeC1hZG1pbi1wYW5lbC8/NzI3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL3dvcmtzcGFjZXMvY29kZXNwYWNlcy1ibGFuay93aXgtYWRtaW4tcGFuZWwvc3JjL2FwcC9hcGkvdXBsb2FkL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS91cGxvYWQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS91cGxvYWRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3VwbG9hZC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi93b3Jrc3BhY2VzL2NvZGVzcGFjZXMtYmxhbmsvd2l4LWFkbWluLXBhbmVsL3NyYy9hcHAvYXBpL3VwbG9hZC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2Fworkspaces%2Fcodespaces-blank%2Fwix-admin-panel%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2Fcodespaces-blank%2Fwix-admin-panel&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/upload/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/upload/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_wix_media__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/wix-media */ \"(rsc)/./src/lib/wix-media.ts\");\n\n\nasync function POST(request) {\n    try {\n        const formData = await request.formData();\n        const file = formData.get('file');\n        const title = formData.get('title') || 'untitled';\n        const mediaType = formData.get('mediaType') || 'gallery';\n        if (!file) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'No file provided'\n            }, {\n                status: 400\n            });\n        }\n        // Validate file type\n        const allowedTypes = [\n            'image/jpeg',\n            'image/jpg',\n            'image/png',\n            'image/webp',\n            'image/gif'\n        ];\n        if (!allowedTypes.includes(file.type)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Invalid file type. Only images are allowed.'\n            }, {\n                status: 400\n            });\n        }\n        // Validate file size (max 100MB)\n        const maxSize = 100 * 1024 * 1024; // 100MB\n        if (file.size > maxSize) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'File size too large. Maximum 100MB allowed.'\n            }, {\n                status: 400\n            });\n        }\n        // Override folder ID for gallery vs news\n        const parentFolderIdOverride = mediaType === 'news' ? '9d0082a7e2dc4620a9af0986eacbea56' : 'fdf9fa883af549218a9397534714ad66';\n        // Upload main image and thumbnail into the specified folder\n        const imageResult = await _lib_wix_media__WEBPACK_IMPORTED_MODULE_1__.wixMediaService.uploadImage(file, title, mediaType, parentFolderIdOverride);\n        // Return as MediaItem\n        const mediaItem = {\n            src: imageResult.src,\n            title: imageResult.title,\n            alt: imageResult.alt,\n            type: 'image'\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: mediaItem\n        });\n    } catch (error) {\n        console.error('Upload error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Upload failed'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS91cGxvYWQvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdEO0FBQ047QUFFM0MsZUFBZUUsS0FBS0MsT0FBb0I7SUFDN0MsSUFBSTtRQUNGLE1BQU1DLFdBQVcsTUFBTUQsUUFBUUMsUUFBUTtRQUN2QyxNQUFNQyxPQUFPRCxTQUFTRSxHQUFHLENBQUM7UUFDMUIsTUFBTUMsUUFBUUgsU0FBU0UsR0FBRyxDQUFDLFlBQXNCO1FBQ2pELE1BQU1FLFlBQVlKLFNBQVNFLEdBQUcsQ0FBQyxnQkFBc0M7UUFFckUsSUFBSSxDQUFDRCxNQUFNO1lBQ1QsT0FBT0wscURBQVlBLENBQUNTLElBQUksQ0FDdEI7Z0JBQUVDLFNBQVM7Z0JBQU9DLE9BQU87WUFBbUIsR0FDNUM7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLHFCQUFxQjtRQUNyQixNQUFNQyxlQUFlO1lBQUM7WUFBYztZQUFhO1lBQWE7WUFBYztTQUFZO1FBQ3hGLElBQUksQ0FBQ0EsYUFBYUMsUUFBUSxDQUFDVCxLQUFLVSxJQUFJLEdBQUc7WUFDckMsT0FBT2YscURBQVlBLENBQUNTLElBQUksQ0FDdEI7Z0JBQUVDLFNBQVM7Z0JBQU9DLE9BQU87WUFBOEMsR0FDdkU7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLGlDQUFpQztRQUNqQyxNQUFNSSxVQUFVLE1BQU0sT0FBTyxNQUFNLFFBQVE7UUFDM0MsSUFBSVgsS0FBS1ksSUFBSSxHQUFHRCxTQUFTO1lBQ3ZCLE9BQU9oQixxREFBWUEsQ0FBQ1MsSUFBSSxDQUN0QjtnQkFBRUMsU0FBUztnQkFBT0MsT0FBTztZQUE4QyxHQUN2RTtnQkFBRUMsUUFBUTtZQUFJO1FBRWxCO1FBRUEseUNBQXlDO1FBQ3pDLE1BQU1NLHlCQUF5QlYsY0FBYyxTQUN6QyxxQ0FDQTtRQUNKLDREQUE0RDtRQUM1RCxNQUFNVyxjQUFjLE1BQU1sQiwyREFBZUEsQ0FBQ21CLFdBQVcsQ0FBQ2YsTUFBTUUsT0FBT0MsV0FBV1U7UUFFOUUsc0JBQXNCO1FBQ3RCLE1BQU1HLFlBQVk7WUFDaEJDLEtBQUtILFlBQVlHLEdBQUc7WUFDcEJmLE9BQU9ZLFlBQVlaLEtBQUs7WUFDeEJnQixLQUFLSixZQUFZSSxHQUFHO1lBQ3BCUixNQUFNO1FBQ1I7UUFDQSxPQUFPZixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7WUFBTWMsTUFBTUg7UUFBVTtJQUU1RCxFQUFFLE9BQU9WLE9BQU87UUFDZGMsUUFBUWQsS0FBSyxDQUFDLGlCQUFpQkE7UUFDL0IsT0FBT1gscURBQVlBLENBQUNTLElBQUksQ0FDdEI7WUFBRUMsU0FBUztZQUFPQyxPQUFPQSxpQkFBaUJlLFFBQVFmLE1BQU1nQixPQUFPLEdBQUc7UUFBZ0IsR0FDbEY7WUFBRWYsUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aXgtYWRtaW4tcGFuZWwvLi9zcmMvYXBwL2FwaS91cGxvYWQvcm91dGUudHM/NTEyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgd2l4TWVkaWFTZXJ2aWNlIH0gZnJvbSAnQC9saWIvd2l4LW1lZGlhJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBmb3JtRGF0YSA9IGF3YWl0IHJlcXVlc3QuZm9ybURhdGEoKTtcbiAgICBjb25zdCBmaWxlID0gZm9ybURhdGEuZ2V0KCdmaWxlJykgYXMgRmlsZTtcbiAgICBjb25zdCB0aXRsZSA9IGZvcm1EYXRhLmdldCgndGl0bGUnKSBhcyBzdHJpbmcgfHwgJ3VudGl0bGVkJztcbiAgICBjb25zdCBtZWRpYVR5cGUgPSBmb3JtRGF0YS5nZXQoJ21lZGlhVHlwZScpIGFzICdnYWxsZXJ5JyB8ICduZXdzJyB8fCAnZ2FsbGVyeSc7XG5cbiAgICBpZiAoIWZpbGUpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdObyBmaWxlIHByb3ZpZGVkJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gVmFsaWRhdGUgZmlsZSB0eXBlXG4gICAgY29uc3QgYWxsb3dlZFR5cGVzID0gWydpbWFnZS9qcGVnJywgJ2ltYWdlL2pwZycsICdpbWFnZS9wbmcnLCAnaW1hZ2Uvd2VicCcsICdpbWFnZS9naWYnXTtcbiAgICBpZiAoIWFsbG93ZWRUeXBlcy5pbmNsdWRlcyhmaWxlLnR5cGUpKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnSW52YWxpZCBmaWxlIHR5cGUuIE9ubHkgaW1hZ2VzIGFyZSBhbGxvd2VkLicgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIFZhbGlkYXRlIGZpbGUgc2l6ZSAobWF4IDEwME1CKVxuICAgIGNvbnN0IG1heFNpemUgPSAxMDAgKiAxMDI0ICogMTAyNDsgLy8gMTAwTUJcbiAgICBpZiAoZmlsZS5zaXplID4gbWF4U2l6ZSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ0ZpbGUgc2l6ZSB0b28gbGFyZ2UuIE1heGltdW0gMTAwTUIgYWxsb3dlZC4nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBPdmVycmlkZSBmb2xkZXIgSUQgZm9yIGdhbGxlcnkgdnMgbmV3c1xuICAgIGNvbnN0IHBhcmVudEZvbGRlcklkT3ZlcnJpZGUgPSBtZWRpYVR5cGUgPT09ICduZXdzJ1xuICAgICAgPyAnOWQwMDgyYTdlMmRjNDYyMGE5YWYwOTg2ZWFjYmVhNTYnXG4gICAgICA6ICdmZGY5ZmE4ODNhZjU0OTIxOGE5Mzk3NTM0NzE0YWQ2Nic7XG4gICAgLy8gVXBsb2FkIG1haW4gaW1hZ2UgYW5kIHRodW1ibmFpbCBpbnRvIHRoZSBzcGVjaWZpZWQgZm9sZGVyXG4gICAgY29uc3QgaW1hZ2VSZXN1bHQgPSBhd2FpdCB3aXhNZWRpYVNlcnZpY2UudXBsb2FkSW1hZ2UoZmlsZSwgdGl0bGUsIG1lZGlhVHlwZSwgcGFyZW50Rm9sZGVySWRPdmVycmlkZSk7XG5cbiAgICAvLyBSZXR1cm4gYXMgTWVkaWFJdGVtXG4gICAgY29uc3QgbWVkaWFJdGVtID0ge1xuICAgICAgc3JjOiBpbWFnZVJlc3VsdC5zcmMsXG4gICAgICB0aXRsZTogaW1hZ2VSZXN1bHQudGl0bGUsXG4gICAgICBhbHQ6IGltYWdlUmVzdWx0LmFsdCxcbiAgICAgIHR5cGU6ICdpbWFnZSdcbiAgICB9O1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IHRydWUsIGRhdGE6IG1lZGlhSXRlbSB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1VwbG9hZCBlcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1VwbG9hZCBmYWlsZWQnIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwid2l4TWVkaWFTZXJ2aWNlIiwiUE9TVCIsInJlcXVlc3QiLCJmb3JtRGF0YSIsImZpbGUiLCJnZXQiLCJ0aXRsZSIsIm1lZGlhVHlwZSIsImpzb24iLCJzdWNjZXNzIiwiZXJyb3IiLCJzdGF0dXMiLCJhbGxvd2VkVHlwZXMiLCJpbmNsdWRlcyIsInR5cGUiLCJtYXhTaXplIiwic2l6ZSIsInBhcmVudEZvbGRlcklkT3ZlcnJpZGUiLCJpbWFnZVJlc3VsdCIsInVwbG9hZEltYWdlIiwibWVkaWFJdGVtIiwic3JjIiwiYWx0IiwiZGF0YSIsImNvbnNvbGUiLCJFcnJvciIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/upload/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   uploadFileToSupabase: () => (/* binding */ uploadFileToSupabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = process.env.SUPABASE_URL;\nconst supabaseKey = process.env.SUPABASE_KEY;\nif (!supabaseUrl || !supabaseKey) {\n    throw new Error('Supabase URL and Key must be defined in your .env.local file');\n}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\nconst uploadFileToSupabase = async (file, bucket, fileName)=>{\n    const { data, error } = await supabase.storage.from(bucket).upload(fileName, file, {\n        cacheControl: '3600',\n        upsert: false\n    });\n    if (error) {\n        throw new Error(`Supabase upload failed: ${error.message}`);\n    }\n    const { data: { publicUrl } } = supabase.storage.from(bucket).getPublicUrl(fileName);\n    return publicUrl;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUVyRCxNQUFNQyxjQUFjQyxRQUFRQyxHQUFHLENBQUNDLFlBQVk7QUFDNUMsTUFBTUMsY0FBY0gsUUFBUUMsR0FBRyxDQUFDRyxZQUFZO0FBRTVDLElBQUksQ0FBQ0wsZUFBZSxDQUFDSSxhQUFhO0lBQ2hDLE1BQU0sSUFBSUUsTUFBTTtBQUNsQjtBQUVBLE1BQU1DLFdBQVdSLG1FQUFZQSxDQUFDQyxhQUFhSTtBQUVwQyxNQUFNSSx1QkFBdUIsT0FBT0MsTUFBWUMsUUFBZ0JDO0lBQ3JFLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNTixTQUFTTyxPQUFPLENBQzNDQyxJQUFJLENBQUNMLFFBQ0xNLE1BQU0sQ0FBQ0wsVUFBVUYsTUFBTTtRQUN0QlEsY0FBYztRQUNkQyxRQUFRO0lBQ1Y7SUFFRixJQUFJTCxPQUFPO1FBQ1QsTUFBTSxJQUFJUCxNQUFNLENBQUMsd0JBQXdCLEVBQUVPLE1BQU1NLE9BQU8sRUFBRTtJQUM1RDtJQUVBLE1BQU0sRUFBRVAsTUFBTSxFQUFFUSxTQUFTLEVBQUUsRUFBRSxHQUFHYixTQUFTTyxPQUFPLENBQUNDLElBQUksQ0FBQ0wsUUFBUVcsWUFBWSxDQUFDVjtJQUUzRSxPQUFPUztBQUNULEVBQUU7QUFFRixpRUFBZWIsUUFBUUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dpeC1hZG1pbi1wYW5lbC8uL3NyYy9saWIvc3VwYWJhc2UudHM/MDZlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xuXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52LlNVUEFCQVNFX1VSTDtcbmNvbnN0IHN1cGFiYXNlS2V5ID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfS0VZO1xuXG5pZiAoIXN1cGFiYXNlVXJsIHx8ICFzdXBhYmFzZUtleSkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ1N1cGFiYXNlIFVSTCBhbmQgS2V5IG11c3QgYmUgZGVmaW5lZCBpbiB5b3VyIC5lbnYubG9jYWwgZmlsZScpO1xufVxuXG5jb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXkpO1xuXG5leHBvcnQgY29uc3QgdXBsb2FkRmlsZVRvU3VwYWJhc2UgPSBhc3luYyAoZmlsZTogRmlsZSwgYnVja2V0OiBzdHJpbmcsIGZpbGVOYW1lOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2Uuc3RvcmFnZVxuICAgIC5mcm9tKGJ1Y2tldClcbiAgICAudXBsb2FkKGZpbGVOYW1lLCBmaWxlLCB7XG4gICAgICBjYWNoZUNvbnRyb2w6ICczNjAwJyxcbiAgICAgIHVwc2VydDogZmFsc2UsXG4gICAgfSk7XG5cbiAgaWYgKGVycm9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBTdXBhYmFzZSB1cGxvYWQgZmFpbGVkOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gIH1cblxuICBjb25zdCB7IGRhdGE6IHsgcHVibGljVXJsIH0gfSA9IHN1cGFiYXNlLnN0b3JhZ2UuZnJvbShidWNrZXQpLmdldFB1YmxpY1VybChmaWxlTmFtZSk7XG5cbiAgcmV0dXJuIHB1YmxpY1VybDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHN1cGFiYXNlO1xuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIlNVUEFCQVNFX1VSTCIsInN1cGFiYXNlS2V5IiwiU1VQQUJBU0VfS0VZIiwiRXJyb3IiLCJzdXBhYmFzZSIsInVwbG9hZEZpbGVUb1N1cGFiYXNlIiwiZmlsZSIsImJ1Y2tldCIsImZpbGVOYW1lIiwiZGF0YSIsImVycm9yIiwic3RvcmFnZSIsImZyb20iLCJ1cGxvYWQiLCJjYWNoZUNvbnRyb2wiLCJ1cHNlcnQiLCJtZXNzYWdlIiwicHVibGljVXJsIiwiZ2V0UHVibGljVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/wix-media.ts":
/*!******************************!*\
  !*** ./src/lib/wix-media.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WixMediaService: () => (/* binding */ WixMediaService),\n/* harmony export */   wixMediaService: () => (/* binding */ wixMediaService)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n\nconst WIX_API_KEY = process.env.WIX_API_KEY;\nconst WIX_SITE_ID = process.env.WIX_SITE_ID;\nconst WIX_ACCOUNT_ID = process.env.WIX_ACCOUNT_ID;\nclass WixMediaService {\n    /**\n   * Generate folder path based on type/year/month/title structure\n   * @param title - The title to use for the folder\n   * @param mediaType - The type of media (gallery or news)\n   * @returns Folder path in format: /gallery|news/YYYY/MM/sanitized-title\n   */ generateFolderPath(title, mediaType) {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, '0');\n        // For news, skip slug, use only date path\n        if (mediaType === 'news') {\n            return `/${mediaType}/${year}/${month}`;\n        }\n        // Sanitize title for gallery folder slug\n        const sanitizedTitle = title.toLowerCase().replace(/[^a-z0-9\\s-]/g, '').replace(/\\s+/g, '-').replace(/-+/g, '-').replace(/^-+|-+$/g, ''); // Remove leading/trailing dashes\n        return `/${mediaType}/${year}/${month}/${sanitizedTitle}`;\n    }\n    /**\n   * Create folder in WIX Media Manager using hierarchical structure\n   * @param folderPath - The folder path to create (e.g., \"/gallery/2025/06/summer-photos\")\n   * @returns Folder ID or null if creation failed\n   */ async ensureFolderExists(folderPath) {\n        try {\n            const pathParts = folderPath.split('/').filter((part)=>part.length > 0);\n            let currentParentId = 'MEDIA_ROOT'; // Default root folder ID\n            // Create each folder in the hierarchy\n            for (const folderName of pathParts){\n                // First, check if folder already exists\n                const listResponse = await fetch(`${this.baseUrl}/folders?parentFolderId=${currentParentId}`, {\n                    method: 'GET',\n                    headers: this.headers\n                });\n                let folderId = null;\n                if (listResponse.ok) {\n                    const foldersData = await listResponse.json();\n                    const existingFolder = foldersData.folders?.find((f)=>f.displayName === folderName);\n                    if (existingFolder) {\n                        folderId = existingFolder.id;\n                    }\n                }\n                // Create folder if it doesn't exist\n                if (!folderId) {\n                    const createResponse = await fetch(`${this.baseUrl}/folders`, {\n                        method: 'POST',\n                        headers: this.headers,\n                        body: JSON.stringify({\n                            displayName: folderName,\n                            parentFolderId: currentParentId\n                        })\n                    });\n                    if (createResponse.ok) {\n                        const folderData = await createResponse.json();\n                        folderId = folderData.folder.id;\n                    } else {\n                        console.error('Failed to create folder:', folderName);\n                        return null;\n                    }\n                }\n                currentParentId = folderId;\n            }\n            return currentParentId;\n        } catch (error) {\n            console.error('Error ensuring folder exists:', error);\n            return null;\n        }\n    }\n    /**\n   * Convert file to blob URL for uploading\n   * @param file - The file to convert\n   * @returns Promise resolving to blob URL string\n   */ async fileToBlobUrl(file) {\n        return new Promise((resolve, reject)=>{\n            try {\n                // Create a temporary blob URL for the file\n                const blobUrl = URL.createObjectURL(file);\n                resolve(blobUrl);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n    /**\n   * Upload image to WIX Media Manager using import API\n   * @param file - The file to upload\n   * @param title - Title for organizing the file\n   * @param mediaType - Type of media (gallery or news)\n   * @param parentFolderIdOverride - Optional explicit folder ID to use instead of creating a new path\n   * @returns Upload response with WIX media URL\n   */ async uploadImage(file, title, mediaType = 'gallery', parentFolderIdOverride) {\n        try {\n            const folderPath = this.generateFolderPath(title, mediaType);\n            // Use override if provided, otherwise ensure folder exists\n            const folderId = parentFolderIdOverride ?? await this.ensureFolderExists(folderPath);\n            // Upload to Supabase to get a public URL\n            console.log(`Uploading file to Supabase: ${file.name}`);\n            const bucket = mediaType;\n            // Generate unique filename based on current timestamp\n            const ext = file.name.split('.').pop() || '';\n            const uniqueFilename = `${Date.now() * 1000}.${ext}`;\n            const supabaseFilePath = `${folderPath}/${uniqueFilename}`.replace(/^\\//, '');\n            const publicUrl = await (0,_supabase__WEBPACK_IMPORTED_MODULE_0__.uploadFileToSupabase)(file, bucket, supabaseFilePath);\n            // Import file using the single import API with the public URL\n            const importPayload = {\n                url: publicUrl,\n                displayName: title,\n                parentFolderId: folderId || 'media-root',\n                mimeType: file.type,\n                mediaType: 'IMAGE',\n                private: false\n            };\n            console.log('Wix import headers:', this.headers);\n            console.log('Wix import payload:', importPayload);\n            const importResponse = await fetch(`${this.baseUrl}/files/import`, {\n                method: 'POST',\n                headers: this.headers,\n                body: JSON.stringify(importPayload)\n            });\n            if (!importResponse.ok) {\n                const errorText = await importResponse.text();\n                throw new Error(`Failed to import file: ${importResponse.status} ${importResponse.statusText} - ${errorText}`);\n            }\n            let importResult;\n            try {\n                importResult = await importResponse.json();\n            } catch (parseError) {\n                const text = await importResponse.text();\n                throw new Error(`Import failed with non-JSON response: ${text}`);\n            }\n            if (!importResult.file) {\n                throw new Error('Import response missing file data');\n            }\n            const uploadedFile = importResult.file;\n            // Return in the expected format\n            return {\n                src: uploadedFile.url,\n                title: uniqueFilename,\n                alt: uniqueFilename,\n                type: 'image'\n            };\n        } catch (error) {\n            console.error('WIX Media upload error:', error);\n            throw error;\n        }\n    }\n    /**\n   * Convert file to data URL\n   * @param file - The file to convert\n   * @returns Promise resolving to data URL string\n   */ fileToDataUrl(file) {\n        return new Promise((resolve, reject)=>{\n            const reader = new FileReader();\n            reader.onload = ()=>resolve(reader.result);\n            reader.onerror = reject;\n            reader.readAsDataURL(file);\n        });\n    }\n    /**\n   * Upload thumbnail image to WIX Media Manager\n   * @param file - The thumbnail file to upload\n   * @param title - Title for organizing the file\n   * @param mediaType - Type of media (gallery or news)\n   * @returns Upload response with WIX media URL\n   */ async uploadThumbnail(file, title, mediaType = 'gallery', parentFolderIdOverride) {\n        try {\n            const folderPath = this.generateFolderPath(title, mediaType);\n            // Generate unique timestamp-based filename for thumbnail\n            const extThumb = file.name.split('.').pop() || '';\n            const uniqueThumbName = `${Date.now() * 1000}.${extThumb}`;\n            const bucket = mediaType;\n            const supabaseFilePath = `${folderPath}/${uniqueThumbName}`.replace(/^[\\\\/]/, '');\n            const publicUrl = await (0,_supabase__WEBPACK_IMPORTED_MODULE_0__.uploadFileToSupabase)(file, bucket, supabaseFilePath);\n            const importPayload = {\n                url: publicUrl,\n                displayName: `${title}-thumbnail`,\n                parentFolderId: (parentFolderIdOverride ?? await this.ensureFolderExists(folderPath)) || 'media-root',\n                mimeType: file.type,\n                mediaType: 'IMAGE',\n                private: false\n            };\n            const importResponse = await fetch(`${this.baseUrl}/files/import`, {\n                method: 'POST',\n                headers: this.headers,\n                body: JSON.stringify(importPayload)\n            });\n            if (!importResponse.ok) {\n                const errorText = await importResponse.text();\n                throw new Error(`Failed to import thumbnail: ${importResponse.status} ${importResponse.statusText} - ${errorText}`);\n            }\n            const importResult = await importResponse.json();\n            if (!importResult.file) {\n                throw new Error('Import response missing file data');\n            }\n            // Cleanup deferred: keep thumbnail temp file in Supabase until gallery/news is saved\n            return {\n                id: importResult.file.id,\n                url: importResult.file.url,\n                filename: uniqueThumbName,\n                path: folderPath,\n                mediaType: importResult.file.mediaType.toLowerCase(),\n                uploaded: importResult.file.createdDate\n            };\n        } catch (error) {\n            console.error('WIX Media thumbnail upload error:', error);\n            throw error;\n        }\n    }\n    /**\n   * Bulk import files to WIX Media Manager\n   * @param files - Array of files to upload\n   * @param title - Title for organizing the files\n   * @param mediaType - Type of media (gallery or news)\n   * @returns Array of upload responses\n   */ async bulkUploadImages(files, title, mediaType = 'gallery') {\n        try {\n            if (files.length === 0) {\n                return [];\n            }\n            if (files.length > 100) {\n                throw new Error('Cannot upload more than 100 files at once (WIX API limit)');\n            }\n            const folderPath = this.generateFolderPath(title, mediaType);\n            // Ensure folder exists\n            const folderId = await this.ensureFolderExists(folderPath);\n            // Prepare import requests by uploading each file to temporary hosting\n            console.log(`Preparing to upload ${files.length} files...`);\n            const importFileRequests = await Promise.all(files.map(async (file, index)=>{\n                console.log(`Uploading file ${index + 1}/${files.length}: ${file.name}`);\n                const bucket = mediaType;\n                // Generate unique filename based on current timestamp\n                const ext = file.name.split('.').pop() || '';\n                const uniqueFilename = `${Date.now() * 1000}.${ext}`;\n                const supabaseFilePath = `${folderPath}/${uniqueFilename}`.replace(/^\\//, '');\n                const publicUrl = await (0,_supabase__WEBPACK_IMPORTED_MODULE_0__.uploadFileToSupabase)(file, bucket, supabaseFilePath);\n                return {\n                    url: publicUrl,\n                    displayName: file.name,\n                    parentFolderId: folderId || 'MEDIA_ROOT',\n                    mimeType: file.type,\n                    mediaType: 'IMAGE',\n                    private: false\n                };\n            }));\n            console.log('Starting bulk import to WIX Media Manager...');\n            // Bulk import using the bulk import API\n            const bulkImportResponse = await fetch(`${this.baseUrl}/bulk/files/import-v2`, {\n                method: 'POST',\n                headers: this.headers,\n                body: JSON.stringify({\n                    importFileRequests,\n                    returnEntity: true\n                })\n            });\n            // Parse and handle bulk import response\n            if (!bulkImportResponse.ok) {\n                const errText = await bulkImportResponse.text();\n                throw new Error(`Failed to bulk import files: ${bulkImportResponse.status} ${bulkImportResponse.statusText} - ${errText}`);\n            }\n            const bulkImportResult = await bulkImportResponse.json();\n            const uploadResponses = [];\n            const errors = [];\n            bulkImportResult.results.forEach((result, index)=>{\n                if (result.success && result.success.file) {\n                    const fileData = result.success.file;\n                    uploadResponses.push({\n                        id: fileData.id,\n                        url: fileData.url,\n                        filename: files[index].name,\n                        path: folderPath,\n                        mediaType: fileData.mediaType.toLowerCase(),\n                        uploaded: fileData.createdDate\n                    });\n                } else if (result.failure) {\n                    const msg = `Failed to upload ${files[index].name}: ${result.failure.message}`;\n                    console.error(msg, result.failure);\n                    errors.push(msg);\n                }\n            });\n            if (errors.length > 0 && uploadResponses.length === 0) {\n                throw new Error(`All file uploads failed:\\n${errors.join('\\n')}`);\n            }\n            if (errors.length > 0) console.warn(`Some files failed to upload:\\n${errors.join('\\n')}`);\n            return uploadResponses;\n        } catch (error) {\n            console.error('WIX Media bulk upload error:', error);\n            throw error;\n        }\n    }\n    /**\n   * Delete media from WIX Media Manager\n   * @param mediaId - The WIX media ID to delete\n   * @returns Success boolean\n   */ async deleteMedia(mediaId) {\n        try {\n            const response = await fetch(`${this.baseUrl}/files/${mediaId}`, {\n                method: 'DELETE',\n                headers: this.headers\n            });\n            return response.ok;\n        } catch (error) {\n            console.error('WIX Media deletion error:', error);\n            return false;\n        }\n    }\n    /**\n   * Get media item details\n   * @param mediaId - The WIX media ID\n   * @returns Media item details\n   */ async getMediaDetails(mediaId) {\n        try {\n            const response = await fetch(`${this.baseUrl}/files/${mediaId}`, {\n                method: 'GET',\n                headers: this.headers\n            });\n            if (!response.ok) {\n                return null;\n            }\n            const data = await response.json();\n            return {\n                id: data.file.id,\n                url: data.file.url,\n                filename: data.file.displayName,\n                path: data.file.parentFolderId || '',\n                mediaType: data.file.mediaType,\n                uploaded: data.file.createdDate\n            };\n        } catch (error) {\n            console.error('WIX Media get details error:', error);\n            return null;\n        }\n    }\n    /**\n   * List media files with optional filtering\n   * @param folderId - Optional folder ID to filter by\n   * @returns Array of media items\n   */ async listMedia(folderId) {\n        try {\n            const queryParams = new URLSearchParams();\n            if (folderId) {\n                queryParams.append('parentFolderId', folderId);\n            }\n            const response = await fetch(`${this.baseUrl}/files?${queryParams.toString()}`, {\n                method: 'GET',\n                headers: this.headers\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to list media: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data.files.map((file)=>({\n                    id: file.id,\n                    url: file.url,\n                    filename: file.displayName,\n                    path: file.parentFolderId || '',\n                    mediaType: file.mediaType,\n                    uploaded: file.createdDate\n                }));\n        } catch (error) {\n            console.error('WIX Media list error:', error);\n            return [];\n        }\n    }\n    /**\n   * List folders in Media Manager\n   * @param parentFolderId - Optional parent folder ID\n   * @returns Array of folder information\n   */ async listFolders(parentFolderId) {\n        try {\n            const queryParams = new URLSearchParams();\n            if (parentFolderId) {\n                queryParams.append('parentFolderId', parentFolderId);\n            }\n            const response = await fetch(`${this.baseUrl}/folders?${queryParams.toString()}`, {\n                method: 'GET',\n                headers: this.headers\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to list folders: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data.folders || [];\n        } catch (error) {\n            console.error('WIX Media list folders error:', error);\n            return [];\n        }\n    }\n    /**\n   * Recursively list all folders under a given parent\n   * @param parentFolderId - starting folder id\n   * @returns flat array of all subfolders\n   */ async listAllFolders(parentFolderId = 'media-root') {\n        const all = [];\n        const queue = [\n            parentFolderId\n        ];\n        while(queue.length){\n            const current = queue.shift();\n            const children = await this.listFolders(current);\n            for (const child of children){\n                all.push(child);\n                queue.push(child.id);\n            }\n        }\n        return all;\n    }\n    /**\n   * Get folder details\n   * @param folderId - The folder ID\n   * @returns Folder details\n   */ async getFolderDetails(folderId) {\n        try {\n            const response = await fetch(`${this.baseUrl}/folders/${folderId}`, {\n                method: 'GET',\n                headers: this.headers\n            });\n            if (!response.ok) {\n                return null;\n            }\n            const data = await response.json();\n            return data.folder;\n        } catch (error) {\n            console.error('WIX Media get folder details error:', error);\n            return null;\n        }\n    }\n    /**\n   * Create a folder in WIX Media Manager\n   * @param displayName - The folder display name\n   * @param parentFolderId - Optional parent folder ID (defaults to media-root)\n   * @returns Success boolean\n   */ async createFolder(displayName, parentFolderId = 'media-root') {\n        try {\n            const response = await fetch(`${this.baseUrl}/folders`, {\n                method: 'POST',\n                headers: this.headers,\n                body: JSON.stringify({\n                    displayName,\n                    parentFolderId\n                })\n            });\n            if (response.ok) {\n                const data = await response.json();\n                return data.folder.id;\n            }\n            return null;\n        } catch (error) {\n            console.error('WIX Media create folder error:', error);\n            return null;\n        }\n    }\n    /**\n   * Generate thumbnail URL for WIX media\n   * @param mediaUrl - The original media URL\n   * @param width - Thumbnail width\n   * @param height - Thumbnail height\n   * @returns Thumbnail URL\n   */ getThumbnailUrl(mediaUrl, width = 300, height = 300) {\n        // WIX media URLs can be modified with query parameters for resizing\n        const url = new URL(mediaUrl);\n        url.searchParams.set('w', width.toString());\n        url.searchParams.set('h', height.toString());\n        url.searchParams.set('fit', 'crop');\n        return url.toString();\n    }\n    constructor(){\n        this.baseUrl = 'https://www.wixapis.com/site-media/v1';\n        this.headers = {\n            'Authorization': `Bearer ${WIX_API_KEY}`,\n            'wix-account-id': WIX_ACCOUNT_ID,\n            'wix-site-id': WIX_SITE_ID,\n            'Content-Type': 'application/json'\n        };\n    }\n}\nconst wixMediaService = new WixMediaService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/wix-media.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/tr46","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2Fworkspaces%2Fcodespaces-blank%2Fwix-admin-panel%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2Fcodespaces-blank%2Fwix-admin-panel&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();